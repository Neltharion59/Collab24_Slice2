Go			m_Go$;
GoMind		m_Mind$;
GoBody  	m_Body$;
Job			m_Job$;
Goid		m_Target$;

#include "k_job_c_mcp_fidget_utils"
#include "k_job_c_talk_utils"

startup state STARTUP$
{
}

////////////////////////////////////////////////////////////////////////////////
//	init

event OnJobInit$( Job job$ )
{
	m_Job$		= job$;
	m_Go$		= job$.Go;
	m_Mind$		= job$.Go.Mind;
	m_Body$		= job$.Go.Body;
	m_Target$	= job$.GoalObject;

	SetState Face$;
}


////////////////////////////////////////////////////////////////////////////////
//	face the audience
state Face$
{
	transition
	{
		-> Talk$:	OnWorldMessage( WE_MCP_FACING_LOCKEDON );
	}

	event OnEnterState$
	{
		if( !m_Go$.HasConversation )
		{
			report.errorf( "Actor '%s', scid:0x%08x was told to run job_talk but he doesn't have a conversation component.",
							m_Go$.GetTemplateName,
							m_Go$.Goid );
			SetState Exiting$;
		}
		MCPManager.MakeRequest( m_Go$.Goid, PL_FACE, m_Target$ );
	}
}


////////////////////////////////////////////////////////////////////////////////
//	blab blab away... pretend you're Lee
state Talk$
{
	transition
	{
		-> Exiting$:	OnWorldMessage( WE_REQ_TALK_END ) =
		{
			if( m_Go$.Mind.ActorAutoFidgets )
			{
				StartFidgetIfRequired$();
			}
		}
	}
	
	trigger OnWorldMessage$( WE_ANIM_DONE )
	{
		TryAnim$('talk');
	}
	
	event OnEnterState$
	{

        if ( GameAuditor.GetDb.GetBool( "c24_slice2_r4_flag_quest_hassat_done" ) )
        {
            m_Go$.GetConversation.RSSelectConversation( "conv_c24_r4_hassat_final" );
        }
		else if ( GameAuditor.GetDb.GetBool( "c24_slice2_r4_flag_quest_hassat_leopard_killed" ) )
		{
            if ( GameAuditor.GetDb.GetBool( "c24_slice2_r4_flag_quest_hassat_done" ) )
            {
                m_Go$.GetConversation.RSSelectConversation( "conv_c24_r4_hassat_after_leopards_killed_next" );
            }
            else
            {
                m_Go$.GetConversation.RSSelectConversation( "conv_c24_r4_hassat_after_leopards_killed_first" );
                GameAuditor.GetDb.SetBool( "c24_slice2_r4_flag_quest_hassat_done", true );
				DumpMain$; // drop quest reward
            }
		}
		else if ( GameAuditor.GetDb.GetBool( "c24_slice2_r4_flag_quest_hassat_under_tower" ) )
		{
            if ( GameAuditor.GetDb.GetBool( "c24_slice2_r4_flag_hassat_talked_to_under_tower" ) )
            {
                m_Go$.GetConversation.RSSelectConversation( "conv_c24_r4_hassat_start_before_summon_next" );
            }
            else
            {
                m_Go$.GetConversation.RSSelectConversation( "conv_c24_r4_hassat_start_before_summon_first" );
                GameAuditor.GetDb.SetBool( "c24_slice2_r4_flag_hassat_talked_to_under_tower", true );

                scid quest_activated_trigger_scid$ = MakeScid(0x0290002C);
                Go quest_activated_trigger$ = GoDb.FindGoidByScid( quest_activated_trigger_scid$ ).Go;
                SendWorldMessage( WE_REQ_ACTIVATE, quest_activated_trigger$.Goid, quest_activated_trigger$.Goid );
		    }
		}
		else
		{
            // Before quest
            m_Go$.GetConversation.RSSelectConversation( "conv_c24_r4_hassat_start" );
		}

		m_Go$.GetConversation.RSActivateDialogue();
	}
}


////////////////////////////////////////////////////////////////////////////////
//	finish blabbing
state Exiting$
{
	event OnEnterState$
	{
		// $$$ close up any dialogs here...

		// Send a PL_FACE reguest without a target so that they no longer
		// continue to face the character they were talking to
		MCPManager.MakeRequest( m_Go$.Goid, PL_FACE );

		m_Job$.MarkForDeletion();

		
		if ( !GameAuditor.GetDb.GetBool( "c24_slice2_r4_flag_quest_hassat_leave_tower_activated" ) )
		{
			scid quest_activated_trigger_scid$ = MakeScid(0x0290001A);
			Go quest_activated_trigger$ = GoDb.FindGoidByScid( quest_activated_trigger_scid$ ).Go;
			SendWorldMessage( WE_REQ_ACTIVATE, quest_activated_trigger$.Goid, quest_activated_trigger$.Goid );
			GameAuditor.GetDb.SetBool( "c24_slice2_r4_flag_quest_hassat_leave_tower_activated", true );
		}
	}
}