[effect_script*]
{
	name	=c24_slice_02_bortusk_projectile_roar;

	script	=[[
			sound play s_e_ds2_gen_brtsk_roar at #SOURCE_POSITION dist 3 20;

			set $pause_time .10;

			call c24_slice_02_bortusk_projectile_roar_base;
			pause $pause_time;

			call c24_slice_02_bortusk_projectile_roar_base;
			pause $pause_time;

			call c24_slice_02_bortusk_projectile_roar_base;
			
			pause 8;
			
			worldmsg WE_SPELL_SYNC_END #OWNER_GOID #OWNER_GOID #TARGET_GOID;
			]];
}
[effect_script*]
{
	name	=c24_slice_02_bortusk_projectile_roar_base;

	script	=[[

			/////////////////////////////////////////
			// This is the main trackball for the effect, everything is based off of this.
			sfx create trackball #TARGET_KB 
				"must_update()scale(0.25)texture(b_sfx_ring_01)
				dur(#DEFAULT_TIMEOUT)afterlife(2)accel(0)velocity(8)color0(1,1,.7)";
			set $trackball #POP;
			sfx position_at $trackball bip01_head source;
			sfx friendly party $trackball;

			////////////////////////////////////////////
			//// Create a light to attach to our trackball
			sfx create lightsource #SOURCE 
				"must_update()color0(1,1,.7)color1(0,0,1)";
			set $light #POP;
			sfx rat $light;
			sfx target $light $trackball;
			sfx attach $trackball $light;

			sfx start $trackball;

			waitfor collision $trackball #DEFAULT_TIMEOUT;

			set $collision_type #POP;

			if ( ( $collision_type == #OBJECT_COLLISION ) || ( $collision_type == #TERRAIN_COLLISION ) )
			{
				get collision point $trackball;

				sfx create explosion #POP 
					"dur(1)scale(.25)offset(0,0,0)color0(1,1,.7)color1(.0,.0,.0)
					omni_dir()";
				sfx attach_point #PEEK @weapon_bone target;
				sfx start #POP;

				get target_position $trackball target;
				sound play s_e_ds2_sp_cd_blind at #POP dist 3 20;
			}

			sfx destroy $trackball;
			worldmsg WE_SPELL_SYNC_END #OWNER_GOID #OWNER_GOID #TARGET_GOID;
			]];
}
[effect_script*] // -ET
{
	name	=c24_slice_02_bortusk_shock_wave;

	script	=[[
			sound play s_e_ds2_gen_brtsk_roar at #TARGET_POSITION dist 5 35;

			set $radius1 0,3,6;
			set $radius2 0,4,8;

			sfx create flurry #TARGET
			"must_update()count(50)tin(0)tout(0)dur(0.2)color0(1,1,.7)
			grow_params(.5,.5,0)";
			
			sfx freeze_targets #PEEK;
			sfx start #POP;

			worldmsg WE_SPELL_SYNC_MID #INVALID_GOID #OWNER_GOID #TARGET_GOID;

			sfx create flurry #TARGET
			"must_update()count(50)tin(0)tout(.5)dur(0.5)color0(1,1,.7)
			grow_params(0,4,5)delay(.2)";
			
			
			sfx freeze_targets #PEEK;
			sfx start #POP;

			sfx create explosion #TARGET 
				"must_update()texture(b_sfx_sparkle01)omni_dir()vmin(10)
				vmax(12)ts(.5)count(100)dur(3)scale(.75)color0(1,1,.7)
				color1(0,0,0)rvel(0,2,0)ivel(0,0,0)delay(.2)";

			sfx freeze_targets #PEEK;
			sfx start #POP;

			camerashake camera_stomp s<frequency=20&magnitude_x=0&magnitude_y=.1&magnitude_z=0&duration=1&epicenter=#TARGET_GOID>;

			sfx create cylinder #TARGET
			"must_update()tin(.1)tout(.4)texture(b_sfx_cyl_03)alpha(1)
			hp0(0,0,0)hp1(0,0,0)spin(16)rp0($radius1)rp1($radius2)
			dur(.5)color0(1,1,.7)segments(24)delay(.2)";
			
			sfx freeze_targets #PEEK;
			sfx start #POP;

			sfx create cylinder #TARGET
			"must_update()tin(.1)tout(.4)texture(b_sfx_cyl_03)alpha(1)
			hp0(0,0,0)hp1(0,0,0)spin(16)rp0($radius1)rp1($radius2)
			dur(.5)color0(1,1,.7)segments(24)delay(.3)";
			
			sfx freeze_targets #PEEK;
			sfx start #POP;

			sfx create cylinder #TARGET
			"must_update()tin(.1)tout(.4)texture(b_sfx_cyl_03)alpha(1)
			hp0(0,0,0)hp1(0,0,0)spin(16)rp0($radius1)rp1($radius2)
			dur(.5)color0(1,1,.7)segments(24)delay(.4)";
			
			sfx freeze_targets #PEEK;
			sfx start #POP;
			]];
}
[effect_script*]
{
	name	=c24_slice_02_effect_bortusk_hat;
	script	=[[
			// offset(L/R, HEIGHT, FRONT/BACK)
			sfx create orbiter #TARGET
				"must_update()scale(1)offset(0,.5,.5)model(c24_slice_2_bortusk_hat)ts(0)
				phi(0)
				radius(0)";
			sfx attach_point #PEEK bip01_head target;
			sfx start #POP;

	]];
}
[effect_script*]
{
	name	=c24_slice_02_effect_group_haste;
		
	//@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
	//This effect was created before the spell itself was created,
	//so all you have to do is hook it up! - BPM
	//@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

	script	=[[
			set $color 0,0,1;
			set $height 4;
			set $width  4;
			set $detail 10;
			set $texture b_sfx_010;
			set $spin 20;
			
			set $delay .04;
			set $dur .40;
						
			
			
			sfx create cylinder #TARGET
				"spin($spin)texture($texture)color0(1,0,0)rp0(.1,.1,0)
				rp1(.1,.1,0)hp0(-.1,-.1,0)hp1(0,0,0)tin(.50)tout(.3)
				bone_orient()rotate(0,0,90)segments($detail)";
			sfx attach_point #PEEK @weapon_bone target;
			sfx start #POP;
			
			sfx create cylinder #TARGET
				"spin($spin)texture($texture)color0(1,0,0)rp0(.1,.1,0)
				rp1(.1,.1,0)hp0(-.1,-.1,0)hp1(0,0,0)tin(.50)tout(.3)
				bone_orient()rotate(0,0,90)segments($detail)";
			sfx attach_point #PEEK @shield_bone target;
			sfx start #POP;
			
			sfx create sray #TARGET 
				"count(20)color0(.8,.2,.1)color1(1,0,0)lmin(0.25)
				lmax(0.25)alpha(1,1,1)";
			sfx attach_point #PEEK @weapon_bone target;
			sfx start #POP;
			
			sfx create sray #TARGET 
				"count(20)color0(.8,.2,.1)color1(1,0,0)lmin(0.25)
				lmax(0.25)alpha(1,1,1)";
			sfx attach_point #PEEK @shield_bone target;
			sfx start #POP;
			
			]];
}
[effect_script*]
{
	name	=c24_slice_02_effect_broom_flyer;
	script	=[[
			// offset(L/R, HEIGHT, FRONT/BACK)
			sfx create orbiter #TARGET
				"must_update()scale(1)offset(0,0,0)model(broom_glb)ts(3.14)
				phi(0)
				radius(0)";
			sfx attach_point #PEEK bip01_head target;
			sfx start #POP;

			sfx create orbiter #TARGET
				"must_update()scale(1)offset(0,0,0)model(ice_mage)ts(0)
				phi(0)
				radius(0)";
			sfx attach_point #PEEK bip01_head target;
			sfx start #POP;
	]];
}
[effect_script*]
{
	name	=c24_slice_02_effect_snowflake_monster;

	script	=[[
			
			sfx create flurry #TARGET 
				"offset(0,0.1,0)texture(b_sfx_031)scale(0.85)radius(.45)count(40)color0(0,0,0)";
			sfx start #POP;

			]];
}
[effect_script*]  // -ET
{
	name	=c24_slice_02_effect_snowflake_monster_projectile_spell;

	script	=[[

			///////////////////////////////////////////////////
			// create the trackball to base the whole effect on
			sfx create trackball #TARGET_KB 
				"must_update()delay(.66)
				ts(2)accel(0)invisible()dur(#DEFAULT_TIMEOUT)scale(2.1)afterlife(0)rvel_max(0)";

			sfx position_at #PEEK @weapon_bone source;
			set $trackball #POP;
			sfx friendly party $trackball;
			sfx start $trackball;

			sfx create orbiter #TARGET 
				"must_update()scale(2)dur(10)radius(0)theta(0)iphi(0)
				itheta(0)rotate(90,0,0)rot_inc(0,1000,0)invisible()";
			set $skull #POP;
			sfx rat $skull;
			sfx target $skull $trackball;
			sfx start $skull;

			sfx create flurry #TARGET 
				"offset(0,0.1,0)texture(b_sfx_031)scale(0.25)radius(.10)count(20)grow_params(0,1.2,1.5)";
			set $charge #POP;
			sfx rat $charge;
			sfx target $charge $trackball;
			sfx start $charge;

			pause .27;

			sound play s_e_spell_orb_ice_shoot at #SOURCE_POSITION dist 3 20;

			waitfor collision $trackball #DEFAULT_TIMEOUT;
			set $collision_type #POP;
			if ( ( $collision_type == #OBJECT_COLLISION ) || ( $collision_type == #TERRAIN_COLLISION ) )
			{
				get collision point $trackball;
				sfx create lightsource #POP
					"radius(1.5)color0(0,0,.8)dur(1)tin(.2)tout(.1)";
				set $fire3 #POP;
				sfx start $fire3;

				get collision point $trackball;
				sfx create explosion #POP
					"must_update()omni_dir()ivel(0,1,0)vmin(3)vmax(5)ts(.6)
					texture(b_sfx_031)dur(3)color0(0,0,.8)color1(0,0,0)
					count(45)";
				set $exp #POP;
				sfx start $exp;

				get target_position $exp target;
				sound play s_e_hit_water_elemental at #POP dist 3 30;

			}
			
			pause 2;
			
			worldmsg WE_SPELL_SYNC_END #INVALID_GOID #OWNER_GOID #TARGET_GOID;
			]];
}
[effect_script*] // - ET
{
	name	=c24_slice_02_effect_dragon_firebomb;

	script	=[[
			///////////////////////////////////////
			// all we do is call the base firebomb
			call c24_slice_02_effect_dragon_firebomb_base v<0 0 0> u<1>;
			waitfor script #POP #DEFAULT_TIMEOUT;
			worldmsg WE_SPELL_SYNC_END #OWNER_GOID #OWNER_GOID #TARGET_GOID;
			]];
}

[effect_script*] // - ET
{
	name	=c24_slice_02_effect_dragon_firebomb_base;

	script	=[[
	
			sfx create orbiter #TARGET_KB 
				"radius(0)dur(10)invisible()";
			sfx snap_to_ground #PEEK;              
			set $orb #PEEK;
			sfx start #POP;  
			
			pause .01;                                     
	        
			/////////////////////////////////////////
			// This is the main trackball for the effect, everything is based off of this.
			sfx create trackball #TARGET_KB 
				"must_update()dir(0,1,0)dur(#DEFAULT_TIMEOUT)afterlife(2)scale(.45)
				ts(1.4)homing()damped()kdamp(0)accel(1)color0(0,0,.4)";
			sfx rat #PEEK;
			sfx target #PEEK $orb;
			set $trackball #POP;
			sfx position_at $trackball @weapon_bone source;
			sfx offset_bone $trackball [0] target;
//			sfx freeze_targets $trackball;
			sfx friendly party $trackball;
			sfx start $trackball;
			
			pause .01;                                     
	        
			////////////////////
			// choose a different starting point if we are fireball storm.
			if ( [1] == 3 )
			{
				sfx position_at $trackball @kill_bone source;
			}
			else
			{
				sfx position_at $trackball @weapon_bone source;
			} // ( [1] == 3 )

			//////////////////////////////////////////
			// Create a light to attach to our trackball
			sfx create lightsource #SOURCE 
				"must_update()color0(0,0,.4)color1(0,0,0)";
			set $firelight #POP;
			sfx rat $firelight;
			sfx target $firelight $trackball;
			sfx start $firelight;


			//////////////////////////////////////////
			// create the flames, the is supposed to be a fireball after all.
			sfx create fire #SOURCE
				"must_update()count(20)color0(0,0,.4)ts(1.5)
				velocity(0,0,0)accel(0,0,0)alphafade(1)scale(.5)max_radius(10)
				min_displace(-1)max_displace(1)bone_orient()texture(b_sfx_fireball-01)";	
			set $fire #POP;
			sfx rat $fire;
			sfx target $fire $trackball;
			sfx start $fire;
			

			sfx create fire #SOURCE
				"must_update()count(30)color0(0,0,.4)ts(2.5)
				velocity(0,0,0)accel(0,0,0)alphafade(1)scale(1.33)max_radius(3)
				min_displace(-1)max_displace(1)bone_orient()texture(b_sfx_fireball-02)";	
			set $fire2 #POP;
			sfx rat $fire2;
			sfx target $fire2 $trackball;
			sfx start $fire2;
			
			sound play s_e_FBfireball_launch at #SOURCE_POSITION dist 3 20;
			waitfor collision $trackball #DEFAULT_TIMEOUT;
			
			set $collision_type #POP;
			if ( ( $collision_type == #OBJECT_COLLISION ) || ( $collision_type == #TERRAIN_COLLISION ) )
			{
				get target_position $trackball target;
				sound play s_e_FBfireball_hit at #POP dist 3 20;
				
				if ( [1] == 1 )
				{// if we are a plain old fireball
					set $scale .7;
					set $detail 20;
				}
				else
				{
					set $scale .4;
					set $detail 16;
				} // ( [1] == 1 )
	
				frandrange 10 40; frandrange 10 40; set $r1a #POP; set $r2a #POP;
				frandrange 10 40; frandrange 10 40; set $r1b #POP; set $r2b #POP;
				frandrange 10 40; frandrange 10 40; set $r1c #POP; set $r2c #POP;
	
				get collision point $trackball;
				sfx create sphere #POP 
					"must_update()scale($scale)color0(0,0,.4)dur(.5)tin(.2)
					tout(.5)irotate($r1a,$r1b,$r1c)grow_params(.1,1.5,3)";
				sfx start #POP;
	
				get collision point $trackball;
				sfx create sphere #POP 
					"must_update()scale($scale)color0(0,0,.4)dur(.5)tin(.2)
					tout(.5)irotate($r2a,$r2b,$r2c)grow_params(.1,1.5,3)";
				sfx start #POP;
	
				get collision point $trackball;
				sfx create cylinder #POP 
					"must_update()scale($scale)texture(b_sfx_cyl_03)hp0(.1,.1,.1)
					hp1(.1,.1,.1)rp0(0,8,5)rp1(.75,8.75,8)tin(.20)tout(.5)
					dur(.65)color0(0,0,.4)spin(15)segments($detail)";
				sfx start #POP;
	
				//////////////////////////////////
				// create a little explosion where the ball hits.
				get collision point $trackball;
				sfx create explosion #POP 
					"must_update()count($detail)color0(0,0,.4)rvel(8,0,8)
					vmin(2)vmax(4)";
				sfx start #POP;
	
				get collision point $trackball;
				sfx create explosion #POP 
					"must_update()count($detail)color0(0,0,.4)rvel(8,0,8)
					texture(b_sfx_031)vmin(2)vmax(4)";
				sfx start #POP;
	
				get collision point $trackball;
				sfx create flurry #POP
					"must_update()count(40)tin(0)tout(.5)dur(0.5)color0(0,0,.4)
					grow_params(-.3,1.6,1.9)scale(1.55)delay(.07)";
				sfx start #POP;
	
				//////////////////////////////////
				// some tracer lookin things
				get collision point $trackball;
				sfx create sray #POP 
					"must_update()count($detail)ts(5)offset(0,.5,0)dur(.2)
					scale($scale)radius(.5)lmin(2)lmax(5)color0(0,0,0)color1(0,0,.4)
					theta(0,0,0)phi(0,0,0)wsmin(0)wsmax(0)wemin(.1)wemax(.1)";
				sfx start #POP;
				
				////////////////////////////
				// clean up
				sfx destroy $trackball;
			}
			
			worldmsg WE_SPELL_SYNC_END #INVALID_GOID #OWNER_GOID #TARGET_GOID;
						
			]];
}
[effect_script*]
{
	name	=c24_slice_02_effect_fairy_queen_spark_multi;

	script	=[[
			sound play s_e_spell_iceshard_cast at #SOURCE_POSITION dist 3 25;

			frandrange 4 5; frandrange 3 4;
			call c24_slice_02_effect_fairy_queen_spark_base <accel(#POP)velocity(#POP)dir(.2,0,0)>;
			frandrange 4 5; frandrange 3 4;
			call c24_slice_02_effect_fairy_queen_spark_base <accel(#POP)velocity(#POP)dir(0,0,-.2)>;
			frandrange 4 5; frandrange 3 4;
			call c24_slice_02_effect_fairy_queen_spark_base <accel(#POP)velocity(#POP)dir(-.2,0,0)>;
			frandrange 4 5; frandrange 3 4;
			call c24_slice_02_effect_fairy_queen_spark_base <accel(#POP)velocity(#POP)dir(0,0,.2)>;

			pause 5;

			worldmsg WE_SPELL_SYNC_END #OWNER_GOID #OWNER_GOID #TARGET_GOID;
			]];
}

[effect_script*]
{
	name	=c24_slice_02_effect_fairy_queen_spark_base;

	script	=[[
			set $size .3;

			/////////////////////////////////////////
			// This is the main trackball for the effect, everything is based off of this.
			sfx create trackball #TARGET_KB 
				"invisible()must_update()scale(1.65)
				homing()damped()kdamp(.01)dur(#DEFAULT_TIMEOUT)afterlife(2)[0]";
			set $trackball #POP;
			sfx position_at $trackball @weapon_bone source;
			sfx friendly party $trackball;
			sfx start $trackball;

			randrange 0 6;
			set $temp #POP;
			if ( $temp == 1 )
			{
				set $orb_model chunks_ice_01;
			} else if ($temp == 2)
			{
				set $orb_model chunks_ice_02;
			} else if ($temp == 3)
			{
				set $orb_model chunks_ice_03;
			} else if ($temp == 4)
			{
				set $orb_model chunks_ice_04;
			} else
			{
				set $orb_model chunks_ice_05;
			}

			sfx create orbiter #TARGET 
				"must_update()scale(2)dur(10)radius(0)theta(0)iphi(0)
				itheta(0)rotate(90,0,0)rot_inc(0,1000,0)model($orb_model)";
			set $skull #POP;
			sfx rat $skull;
			sfx target $skull $trackball;
			sfx start $skull;

			waitfor collision $trackball #DEFAULT_TIMEOUT;

			set $collision_type #POP;

			if ( ( $collision_type == #OBJECT_COLLISION ) || ( $collision_type == #TERRAIN_COLLISION ) )
			{
				get collision point $trackball;
				sfx create explosion #POP 
					"must_update()texture(b_sfx_sparkle01)color0(.5,.5,1)
					radius(0)dur(2)omni_dir()";
				sfx start #POP;

				get target_position $trackball target;
				sound play s_e_die_shard_small at #POP dist 3 20;
			}

			sfx destroy $trackball;
			worldmsg WE_SPELL_SYNC_END #OWNER_GOID #OWNER_GOID #TARGET_GOID;
			]];
}